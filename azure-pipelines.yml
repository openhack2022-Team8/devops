# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/apis/poi/poi.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

#variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '430761df-e439-4fb3-a1b8-c54ef24a057b'
  imageRepository: 'openhackteamdevops'
  containerRegistry: 'openhackbuf27or3acr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/.devcontainer/Dockerfile'
  tag: '$(Build.BuildId)'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

#- task: DockerInstaller@0
#  inputs:
#    dockerVersion: '17.09.0-ce'




  # Agent VM image name
#  vmImageName: 'ubuntu-latest'

#stages:
#- stage: Build
#  displayName: Build and push stage
#  jobs:
#  - job: Build
#    displayName: Build
#    pool:
#      vmImage: $(vmImageName)
#    steps:

- task: Docker@2
  displayName: Build and push an image to container registry
  inputs:
    command: buildAndPush
    repository: $(imageRepository)
    dockerfile: $(dockerfilePath)
    containerRegistry: $(dockerRegistryServiceConnection)
    tags: |
      $(tag)
