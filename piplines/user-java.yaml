# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - 'apis/user-java'
  

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '430761df-e439-4fb3-a1b8-c54ef24a057b'
  imageRepository: 'devopsoh/api-user-java'
  containerRegistry: 'openhackbuf27or3acr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/.devcontainer/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
      demands: maven
    
    steps:
    - task: Maven@3
      displayName: 'Build UserJava'
      inputs:
        mavenPomFile: '**/../apis/user-java/pom.xml'
        testResultsFiles: '**/TEST-*.xml'
        mavenVersionOption: Path
        mavenDirectory: /usr
        mavenSetM2Home: true

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

#- task: Maven@3
#  inputs:
#    mavenPomFile: 'devops/apis/user-java/pom.xml'
#    publishJUnitResults: true
#    testResultsFiles: '**/surefire-reports/TEST-*.xml'
#    javaHomeOption: 'JDKVersion'
#    mavenVersionOption: 'Default'
#    mavenAuthenticateFeed: false
#    effectivePomSkip: false
#    sonarQubeRunAnalysis: false

